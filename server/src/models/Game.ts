import mongoose, { Document, Schema } from 'mongoose';

// Define interface for Game document
export interface IGame extends Document {
    id: string; // Virtual property
    createdAt: Date; // Generated by Mongoose
    updatedAt: Date; // Generated by Mongoose

    name: string;
    description: string;
    state: object; // Object for state; Todo: Expand this type
    userList: string[]; // Array of user IDs associated with this game
}

// Define schema for Game model
const gameSchema = new Schema(
    {
        name: { type: String, required: true },
        description: { type: String, required: true },
        state: { type: Schema.Types.Mixed, default: {} },
        userList: { type: [String], default: [] }
    },
    {
        timestamps: true,
        toJSON: { virtuals: true },
        toObject: { virtuals: true }
    }
);

// Define virtual properties for Game model
gameSchema.virtual('id').get(function (this: IGame) {
    return (this._id as unknown as string).toString();
});

// Create and export Game model
const Game = mongoose.model<IGame>('Game', gameSchema);
export default Game;

// Function to create a game preview
export function makeGamePreview(game: IGame) {
    return {
        id: game.id,
        name: game.name,
        description: game.description
    };
}
